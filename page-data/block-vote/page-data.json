{"componentChunkName":"component---src-templates-post-layout-tsx-content-file-path-src-content-posts-blockvote-index-mdx","path":"/block-vote/","result":{"pageContext":{"node":{"id":"f55a8cbd-0249-5c18-9ef4-27c62e5ea16e","frontmatter":{"slug":"block-vote","title":"BlockVote: Secure Blockchain-Based Voting Application","date":"2023-05-07","description":"Imagine a voting system that’s not only secure but also completely transparent. BlockVote is a revolutionary blockchain-based voting application designed to ensure fair and tamper-proof elections. Built with Angular and Truffle, this app allows users to create and manage voting campaigns, cast votes securely via Metamask, and view results with complete transparency on the blockchain. Every vote is recorded immutably, and results are available for public verification through Etherscan. With features like voiceover support for visually impaired users and multi-language options, BlockVote is designed for accessibility and inclusivity. Whether you're running a small election or a large-scale poll, BlockVote brings trust and efficiency to the voting process.","tags":["Angular Application","Angular Multi module","Truffle","Material Design","Keshav Lingala","Keshav Reddy","Keshav Reddy Lingala","Lingala Keshav Reddy","Keshav"],"featuredImage":{"publicURL":"/static/279f4873d5d0dc42a0382a3357891615/feature.png"},"techs":["HTML","CSS","Javascript","Typescript","Angular","Firebase"]},"internal":{"contentFilePath":"/home/runner/work/keshavlingala.github.io/keshavlingala.github.io/src/content/posts/blockvote/index.mdx"},"body":"\nSecure and Transparent Elections: Implementing a Blockchain-Based Voting System\n\n## Introduction\n\n[![Block-Vote](https://img.shields.io/badge/github-BlockVote-blue.svg)](https://github.com/keshavlingala/BlockVote)\n\n## Project Description\n\nThe application lets any user create campaigns, whoever creates the Campaign will be the Campaign's owner, and only he can\nmodify the Campaign. Each Campaign will have candidates. The Campaign owner can only add candidates.\n\nIn order to use the application, the user must install Metamask as a Blockchain wallet and connect to the respective network.\nUsers with voting rights can vote.\n\nMoreover, the Campaign owner can make the Campaign Inactive. Everyone can see the votes and the Winner and Download the Results in PDF format. Each Campaign and candidate in the Campaign will have a unique blockchain address so It can be transparent, and all the vote transactions can be seen in transaction history and Etherscan.\nUsers can always go to the help screen to understand the rules and see FAQs for better usability.\n\nThe application is also accessible for visually impaired users using a voiceover when hovered over the screen.\nThe application also supports multiple languages with a single click of a button.\n\n## Technical Details\n\n- Used Truffle to deploy smart contracts to Ganache and Sepolia Ethereum Network\n- Used Angular 11 and NX Workspace for front-end development\n- ng-web3 library to connect to Metamask and make blockchain transactions\n- Used Google's Material Design Standard Components\n- Used Multiple Solidity contracts and inheritance features to develop  robust smart contracts\n- Used Dexie for Minimalist IndexedDB to store eligible voters\n- Used JsPDF Library to generate PDF files\n\n# Instructions to run the project\n\n- Clone the repository\n- Run `npm install` in the root directory\n- Run `npm run truffle:develop` to start the local blockchain\n- Run `npm run truffle:migrate` to deploy the smart contracts to the local blockchain\n- Modify the `truffle-config.js` file to point to the local blockchain\n- Copy the contract addresses from the terminal and paste them in the file `environment..campaignFactory.address`\n- Run `npm run start` to start the frontend application\n- Navigate to `http://localhost:4200/` to view the application\n\n## Project Features\n\n- Create Campaign\n- Adding Candidates to Campaign\n- Voting for Candidates\n- Smart Contracts for Campaign operations and voting operations\n- Ability to make a Campaign InActive after Voting is done, so that no more votes can be cast\n- Security, cannot access any campaigns without logging in\n- ID verification and ability to add eligible voters ( Voter ID and Social Security)\n- Ability to Download Voting Results as PDF file\n- UI Improvements, Card Designs, Colors, Buttons, Animation, Icons, Images etc\n- Multiple Language Support\n- Improve accessibility for visually impaired users\n- Upcoming Elections Headers\n- Help Screen with Instructions and FAQs for Voters\n- Share Campaign on Any Social Media Platform with a single click\n- Deployed to Sepolia Testnet and Ganache\n\n## Project Screenshots\n\n### Home Page\n\n![HomePage](images/ss5.png)\n\n\n<br/>\n\n\n### Login and Metamask Connection\n\n![Login](images/ss6.png)\n\n<br/>\n\n\n### Casting User Vote using Metamask\n\n![Vote](images/ss4.png)\n\n<br/>\n\n\n### Campaign Details\n\n![Campaign Details](images/ss2.png)\n\n<br/>\n\n\n### Local DB for storing eligible voters\n\n![Local DB](images/ss3.png)\n\n<br/>\n\n\n### Help Screen\n\n![Help Screen](images/ss1.png)\n\n<br/>\n\n","tableOfContents":{"items":[{"items":[{"url":"#introduction","title":"Introduction"},{"url":"#project-description","title":"Project Description"},{"url":"#technical-details","title":"Technical Details"}]},{"url":"#instructions-to-run-the-project","title":"Instructions to run the project","items":[{"url":"#project-features","title":"Project Features"},{"url":"#project-screenshots","title":"Project Screenshots","items":[{"url":"#home-page","title":"Home Page"},{"url":"#login-and-metamask-connection","title":"Login and Metamask Connection"},{"url":"#casting-user-vote-using-metamask","title":"Casting User Vote using Metamask"},{"url":"#campaign-details","title":"Campaign Details"},{"url":"#local-db-for-storing-eligible-voters","title":"Local DB for storing eligible voters"},{"url":"#help-screen","title":"Help Screen"}]}]}]}},"next":{"frontmatter":{"slug":"bigdata","title":"Real-Time and Batch Processing of Splitwise Data with Big Data Technologies","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/6978333ac2b3b7a7c98bf962d203d360/d94f3/feature.png","srcSet":"/static/6978333ac2b3b7a7c98bf962d203d360/0d135/feature.png 13w,\n/static/6978333ac2b3b7a7c98bf962d203d360/ed1b0/feature.png 25w,\n/static/6978333ac2b3b7a7c98bf962d203d360/d94f3/feature.png 50w,\n/static/6978333ac2b3b7a7c98bf962d203d360/e0597/feature.png 100w","sizes":"(min-width: 50px) 50px, 100vw"},"sources":[{"srcSet":"/static/6978333ac2b3b7a7c98bf962d203d360/6623d/feature.webp 13w,\n/static/6978333ac2b3b7a7c98bf962d203d360/a4064/feature.webp 25w,\n/static/6978333ac2b3b7a7c98bf962d203d360/56651/feature.webp 50w,\n/static/6978333ac2b3b7a7c98bf962d203d360/7d7ec/feature.webp 100w","type":"image/webp","sizes":"(min-width: 50px) 50px, 100vw"}]},"width":50,"height":34}}}}},"previous":{"frontmatter":{"slug":"algorithm-analyzer","title":"Interactive Python GUI for Visualizing Sorting Algorithms","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#383838","images":{"fallback":{"src":"/static/46dd54ee74947ec6b36012ae6dcc676d/499b4/feature.jpg","srcSet":"/static/46dd54ee74947ec6b36012ae6dcc676d/0389d/feature.jpg 13w,\n/static/46dd54ee74947ec6b36012ae6dcc676d/93657/feature.jpg 25w,\n/static/46dd54ee74947ec6b36012ae6dcc676d/499b4/feature.jpg 50w,\n/static/46dd54ee74947ec6b36012ae6dcc676d/a1b81/feature.jpg 100w","sizes":"(min-width: 50px) 50px, 100vw"},"sources":[{"srcSet":"/static/46dd54ee74947ec6b36012ae6dcc676d/17955/feature.webp 13w,\n/static/46dd54ee74947ec6b36012ae6dcc676d/55a61/feature.webp 25w,\n/static/46dd54ee74947ec6b36012ae6dcc676d/b90ba/feature.webp 50w,\n/static/46dd54ee74947ec6b36012ae6dcc676d/3d77e/feature.webp 100w","type":"image/webp","sizes":"(min-width: 50px) 50px, 100vw"}]},"width":50,"height":40}}}}},"frontmatter":{"title":"BlockVote: Secure Blockchain-Based Voting Application","slug":"block-vote","tags":["Angular Application","Angular Multi module","Truffle","Material Design","Keshav Lingala","Keshav Reddy","Keshav Reddy Lingala","Lingala Keshav Reddy","Keshav"],"description":"Imagine a voting system that’s not only secure but also completely transparent. BlockVote is a revolutionary blockchain-based voting application designed to ensure fair and tamper-proof elections. Built with Angular and Truffle, this app allows users to create and manage voting campaigns, cast votes securely via Metamask, and view results with complete transparency on the blockchain. Every vote is recorded immutably, and results are available for public verification through Etherscan. With features like voiceover support for visually impaired users and multi-language options, BlockVote is designed for accessibility and inclusivity. Whether you're running a small election or a large-scale poll, BlockVote brings trust and efficiency to the voting process.","featuredImage":"feature.png","date":"2023-05-07","code":"https://github.com/keshavlingala/BlockVote","techs":["HTML","CSS","Javascript","Typescript","Angular","Firebase"]}}},"staticQueryHashes":["2166032461","2392263147","2405727277","3983028554"],"slicesMap":{}}