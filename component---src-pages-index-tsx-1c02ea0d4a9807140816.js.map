{"version":3,"file":"component---src-pages-index-tsx-1c02ea0d4a9807140816.js","mappings":"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","sources":["webpack://keshavlingala-migrated/./src/components/Profile.tsx","webpack://keshavlingala-migrated/./src/components/Skills.tsx","webpack://keshavlingala-migrated/./src/components/ContactMe.tsx","webpack://keshavlingala-migrated/./src/constants.tsx","webpack://keshavlingala-migrated/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Background = styled.section`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 50px;\n    @media only screen and (max-width: 600px) {\n        flex-direction: column-reverse;\n        text-align: center;\n        margin-bottom: 10px;\n    }\n`;\n\nconst Title = styled.h1`\n    display: block;\n    margin-left: 2vw;\n    font-size: 8vw;\n    font-weight: lighter;\n    animation: fadeInLeft 2s;\n    @media only screen and (max-width: 600px) {\n        margin-left: 0;\n    }\n`;\n\nconst SubTitle = styled.span`\n    display: block;\n    margin-left: 2vw;\n    font-size: 3vw;\n    font-weight: initial;\n    animation: fadeInUp 2s;\n`;\n\nconst Profile: React.FC = () => {\n    return (\n        <Background>\n            <div>\n                <Title>Keshav Lingala</Title>\n                <SubTitle>Software Development Engineer</SubTitle>\n            </div>\n        </Background>\n    );\n};\n\nexport default Profile;\n","import React, {useState} from \"react\";\nimport styled from \"@emotion/styled\";\nimport {ToolTipItem} from \"./ToolTip\";\nimport {Icon, Skill} from \"../types\";\nimport {icons} from \"../hooks/useIcons\";\nimport {IconNames} from \"../iconNames\";\n\n\n//  Emotion styled components\n\n\nconst SkillList = styled.ul`\n    margin: 0;\n    width: 50%;\n    @media only screen and (max-width: 600px) {\n        width: 100%;\n    }\n`;\n\nconst SkillItem = styled.li<{ active?: boolean; progress: number }>`\n    display: flex;\n    flex-direction: row;\n    padding: 10px;\n    list-style: none;\n    border-radius: 10px 10px 0 0;\n    cursor: pointer;\n    position: relative;\n    background-color: ${p => (p.active ? \"#d0cfcf45\" : \"inherit\")};\n\n    &:hover {\n        background-color: #d0cfcf45;\n\n        ::after {\n            width: ${p => p.progress}%;\n        }\n    }\n\n    &::after {\n        content: '';\n        width: ${p => (p.active ? p.progress : 0)}%;\n        transition: width 0.5s ease-out;\n        position: absolute;\n        left: 0;\n        display: inline-block;\n        height: 2px;\n        background-color: #ffd285;\n        bottom: 0;\n    }\n`;\n\nconst Section = styled.div`\n    display: flex;\n    width: 100%;\n    min-height: 429px;\n    @media only screen and (max-width: 600px) {\n        flex-direction: column;\n        min-height: 794px;\n    }\n`;\n\nconst IconLister = styled.ul`\n    display: grid;\n    flex-wrap: wrap;\n    width: 50%;\n    align-items: flex-start;\n    grid-template-columns: auto auto auto auto auto;\n    grid-gap: 1rem;\n    grid-column-gap: 3px;\n    grid-row-gap: 3px;\n    text-align: center;\n    margin-bottom: auto;\n    transition: height 0.5s ease-in-out;\n    height: auto;\n\n    li {\n        margin-bottom: 33px;\n        width: 50px;\n        height: 50px;\n        animation: fadeUp 0.5s ease-in-out;\n    }\n\n    @keyframes fadeUp {\n        from {\n            opacity: 0;\n            transform: translateY(-10px);\n        }\n        to {\n            opacity: 1;\n            transform: translateY(0px);\n        }\n    }\n    @media only screen and (max-width: 600px) {\n        width: 100%;\n        margin-top: 66px;\n        margin-left: 0;\n    }\n`;\n\n\nlet skills: Skill[] = [\n   {\n    name: \"Front-end Web Development\",\n    progress: 100,\n    techs: [\n        IconNames.Angular, IconNames.Typescript, IconNames.React, IconNames.Javascript,\n        IconNames.HTML, IconNames.CSS, IconNames.Bootstrap, IconNames.Gatsby, IconNames.PWA\n    ]\n},\n{\n    name: \"Back-end Development\",\n    progress: 100,\n    techs: [\n        IconNames.Java, IconNames.SpringBoot, IconNames.Python, IconNames.Kotlin,\n        IconNames.NodeJS, IconNames.GoLang, IconNames.GoGin, IconNames.Javascript,\n        IconNames.ApacheKafka, IconNames.ApacheSpark, IconNames.ApacheCassandra,\n        IconNames.NestJs, IconNames.Typescript\n    ]\n},\n{\n    name: \"Database Design and Management\",\n    progress: 100,\n    techs: [\n        IconNames.MySQL, IconNames.MongoDB, IconNames.GoogleCloud, IconNames.ApacheCassandra,\n        IconNames.Oracle, IconNames.Postgresql, IconNames.GraphQL, IconNames.Redis\n    ]\n},\n{\n    name: \"Cloud Technologies and DevOps\",\n    progress: 100,\n    techs: [\n        IconNames.GoogleCloud, IconNames.AWS, IconNames.Azure, IconNames.Docker,\n        IconNames.Kubernetes, IconNames.ApacheHadoop, IconNames.ApacheSpark,\n        IconNames.Bash, IconNames.ApacheKafka, IconNames.Jenkins, IconNames.Git,\n        IconNames.Ansible, IconNames.GithubActions\n    ]\n},\n{\n    name: \"Full Stack Development\",\n    progress: 100,\n    techs: [\n        IconNames.Gatsby, IconNames.Python, IconNames.GraphQL, IconNames.Redis,\n        IconNames.Angular, IconNames.Typescript, IconNames.React, IconNames.SpringBoot,\n        IconNames.NodeJS, IconNames.Docker, IconNames.Javascript, IconNames.HTML,\n        IconNames.CSS, IconNames.Bootstrap, IconNames.AWS, IconNames.Kubernetes,\n        IconNames.ApacheKafka, IconNames.Jenkins, IconNames.Ansible, IconNames.Git,\n        IconNames.Postgresql, IconNames.MySQL, IconNames.MongoDB, IconNames.Java,\n        IconNames.Kotlin, IconNames.GoLang, IconNames.GoGin, IconNames.ApacheSpark,\n        IconNames.ApacheCassandra, IconNames.NestJs, IconNames.GithubActions, IconNames.PWA\n    ]\n},\n{\n    name: \"Neural Networks and Machine Learning\",\n    progress: 100,\n    techs: [\n        IconNames.NeuralNetworks, IconNames.TensorFlow, IconNames.Keras,\n        IconNames.Python, IconNames.Java, IconNames.CPP, IconNames.Javascript,\n        IconNames.Arduino\n    ]\n},\n{\n    name: \"Tools and IDEs for Development\",\n    progress: 100,\n    techs: [\n        IconNames.Idea, IconNames.GoLand, IconNames.WebStorm, IconNames.Pycharm,\n        IconNames.VsCode, IconNames.Postman, IconNames.Insomnia, IconNames.BlazeMeter,\n        IconNames.Jmeter, IconNames.Prometheus, IconNames.Grafana, IconNames.Kibana,\n        IconNames.ElasticSearch, IconNames.Splunk, IconNames.Jira, IconNames.Discord,\n        IconNames.Slack, IconNames.Confluence, IconNames.BitBucket, IconNames.Scrum,\n        IconNames.Kanban, IconNames.Agile, IconNames.WaterFall\n    ]\n},\n{\n    name: \"Automation scripting\",\n    progress: 100,\n    techs: [\n        IconNames.Python, IconNames.Bash, IconNames.Git, IconNames.GoogleCloud,\n        IconNames.Docker, IconNames.AWS\n    ]\n},\n{\n    name: \"All Skills\",\n    progress: 100,\n    techs: []\n}\n].map(skill => ({...skill, active: skill.name === \"Full Stack Development\"}));\n\n\nconst SkillsComponent: React.FC = () => {\n    const [items, setItems] = useState<Icon[]>(icons.filter(icon => skills.find(skill => skill.active)?.techs.includes(icon.name)));\n\n    return (\n        <Section>\n            <SkillList>\n                {skills.map(skill => (\n                    <SkillItem\n                        tabIndex={0}\n                        onClick={() => {\n                            if (skill.techs.length === 0) {\n                                setItems(icons);\n                            } else {\n                                setItems(icons.filter(icon => skill.techs.includes(icon.name)));\n                            }\n                            skills = skills.map(s => ({...s, active: s.name === skill.name}));\n                        }}\n                        active={skill.active}\n                        progress={skill.progress}\n                        key={skill.name}\n                    >\n                        {skill.name} {skill.active}\n                    </SkillItem>\n                ))}\n            </SkillList>\n            <IconLister>\n                {items.map(icon => (\n                    <ToolTipItem tooltip={icon.name} key={icon.name}>\n                        <img width=\"40px\" height=\"40px\" src={icon.icon} alt={icon.name}/>\n                    </ToolTipItem>\n                ))}\n            </IconLister>\n        </Section>\n    );\n};\n\nexport default SkillsComponent;\n","import React, {ChangeEvent, useState} from \"react\";\nimport styled from \"@emotion/styled\";\nimport {ANON_MAILING_URL, MAILING_URL} from \"../constants\";\n\nconst Input = styled.input`\n    padding: 10px;\n    background: inherit;\n    color: inherit;\n    box-shadow: none;\n    border: 1px solid;\n    border-radius: 10px 10px 0 0;\n    transition: background-color 0.5s ease-in-out;\n\n    &:focus {\n        outline: none;\n        box-shadow: 1px 1px 1px black;\n        background-color: #1b1b1b;\n    }\n\n    width: 100%;\n    margin-right: 20vw;\n    @media only screen and (max-width: 600px) {\n        margin-right: 0;\n        margin-top: 2vw;\n        width: 100%;\n    }\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    margin-top: 20px;\n    @media only screen and (max-width: 600px) {\n        flex-direction: column;\n    }\n`;\n\nconst TextArea = styled.textarea`\n    color: inherit;\n    resize: none;\n    width: calc(100% - 20vw);\n    background-color: inherit;\n    box-shadow: none;\n    border: 1px solid;\n    border-radius: 10px 10px 0 0;\n    padding: 10px;\n\n    &:focus {\n        outline: none;\n        box-shadow: 1px 1px 1px black;\n        background-color: #1b1b1b;\n    }\n\n    @media only screen and (max-width: 600px) {\n        width: 100%;\n    }\n`;\n\nexport const Button = styled.button`\n    box-shadow: none;\n    background-color: inherit;\n    color: inherit;\n    border-radius: 4px;\n    padding: 5px;\n    border: 1px solid;\n    text-align: center;\n    cursor: pointer;\n\n    &:focus, &:hover {\n        outline: none;\n        background-color: #1b1b1b;\n        box-shadow: inset 0 0 4px 5px black;\n    }\n\n    &:disabled {\n        background-color: #1b1b1b;\n        color: #545454;\n        box-shadow: none;\n        outline: none;\n        cursor: not-allowed;\n    }\n`;\n\nconst Span = styled.span<{ show: number }>`\n    display: ${p => p.show !== 0 ? \"inline-block\" : \"none\"};\n    margin-left: 30px;\n`;\n\ntype FormType = {\n    name: string;\n    email: string;\n    content: string;\n    anonContent: string;\n};\n\nconst ContactMe: React.FC = () => {\n    const [form, setForm] = useState<FormType>({name: \"\", email: \"\", content: \"\", anonContent: \"\"});\n    const [valid, setValid] = useState(false);\n    const [show, setShow] = useState(0);\n    const [anonShow, setAnonShow] = useState(0);\n\n    const handleForm = (change: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, k: keyof FormType) => {\n        const updatedForm = {...form, [k]: change.target.value};\n        setForm(updatedForm);\n\n        if (updatedForm.name.length > 2 &&\n            updatedForm.email.match(\"^((?!\\\\.)[\\\\w-_.]*[^.])(@\\\\w+)(\\\\.\\\\w+(\\\\.\\\\w+)?[^.\\\\W])$\") &&\n            updatedForm.content.length > 0) {\n            setValid(true);\n        } else {\n            setValid(false);\n        }\n    };\n\n    const submitForm = async (isAnon: boolean) => {\n        const url = isAnon ? ANON_MAILING_URL : MAILING_URL;\n        const data = isAnon ? {anon_content: form.anonContent} : {...form, userData: await fetchUserData()};\n        const resetForm: FormType = {name: \"\", email: \"\", content: \"\", anonContent: \"\"};\n\n\n        fetch(url, {\n            body: JSON.stringify(data),\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            }\n        }).then((d) => {\n            if (d.ok) {\n                isAnon ? setAnonShow(1) : setShow(1);\n                setTimeout(() => isAnon ? setAnonShow(0) : setShow(0), 10000);\n            } else {\n                isAnon ? setAnonShow(-1) : setShow(-1);\n            }\n        }).catch((_) => {\n            isAnon ? setAnonShow(-1) : setShow(-1);\n        });\n\n        setForm(resetForm);\n        setValid(false);\n    };\n\n    const fetchUserData = async () => {\n        try {\n            return await (await fetch(\"https://api.db-ip.com/v2/free/self\")).json();\n        } catch (e) {\n            return null;\n        }\n    };\n\n    return (\n        <>\n            <Row>\n                <Input id=\"name\" value={form.name} onChange={(c) => handleForm(c, \"name\")} name=\"name\" placeholder=\"Name\" type=\"text\"/>\n                <label htmlFor=\"name\">Name</label>\n                <Input id=\"email\" value={form.email} onChange={(c) => handleForm(c, \"email\")} name=\"email\" placeholder=\"Email\" type=\"text\"/>\n                <label htmlFor=\"email\">Email</label>\n            </Row>\n            <Row>\n                <TextArea id=\"content\" value={form.content} onChange={(c) => handleForm(c, \"content\")} placeholder=\"Type Your Message Here\"\n                          name=\"content\"/>\n                <label htmlFor=\"content\">Message</label>\n            </Row>\n            <Row>\n                <Button disabled={!valid} onClick={() => submitForm(false)}>Submit</Button>\n                <Span show={show}>{show === -1 ? \"Something Went Wrong Please try to contact with email\" : \"Submitted Successfully\"}</Span>\n            </Row>\n\n            <h2 style={{marginTop: '50px'}} title=\"Send Anonymous Message\">Send Anonymous Message</h2>\n            <Row>\n                <TextArea id=\"anonContent\" value={form.anonContent} onChange={(c) => handleForm(c, \"anonContent\")}\n                          placeholder=\"Anonymous Message Here\" name=\"anonContent\" rows={5}/>\n                <label htmlFor=\"anonContent\">Message</label>\n            </Row>\n            <Row>\n                <Button disabled={!form.anonContent.length} onClick={() => submitForm(true)}>Send Anonymous Message</Button>\n                <Span show={anonShow}>{anonShow === -1 ? \"Something Went Wrong!\" : \"Submitted Successfully\"}</Span>\n            </Row>\n        </>\n    );\n};\n\nexport default ContactMe;\n","export const MAILING_URL = \"https://mailing-service.up.railway.app/keshav\";\nexport const ANON_MAILING_URL = \"https://mailing-service.up.railway.app/anonymous\";\n// export const ANON_MAILING_URL = \"http://localhost:8080/anonymous\";\n// export const MAILING_URL = \"http://localhost:3000/\";\n","import React from \"react\";\nimport Layout from \"../layouts/layout\";\nimport styled from \"@emotion/styled\";\nimport {Container} from \"../components/CustomComponents\";\nimport Projects from \"../components/Projects\";\nimport Profile from \"../components/Profile\";\nimport {SEO} from \"../components/SEO\";\nimport Skills from \"../components/Skills\";\nimport ContactMe from \"../components/ContactMe\";\n\nconst Description = styled.p`\n    margin: 20px 0;\n    list-style: none;\n`;\n\nconst IndexPage: React.FC = () => {\n    console.log(\"%c Hey 👋\", \"font-size:10vw\");\n    return (\n        <Layout>\n            <Profile/>\n            <Container>\n                <Description>\n                    Adept Software Engineer with a robust portfolio in full-stack development, cloud solutions, and\n                    system optimization. Proficient in Java, Python, AWS, Kubernetes, and beyond. Committed to\n                    excellence in clean code and cutting-edge technologies.\n                    Dive into my projects below. Get in touch: <a\n                    href=\"mailto:admin@keshav.codes\">admin@keshav.codes</a>\n                </Description>\n\n                <span className=\"anchor\" id=\"projects\"/>\n                <h2>Projects</h2>\n                <Projects/>\n                <span className=\"anchor\" id=\"experience\"/>\n                {/*<h2>Work Experience</h2>*/}\n                {/*<WorkExperience/>*/}\n                {/*<span className=\"anchor\" id=\"education\"/>*/}\n                {/*<h2>Education</h2>*/}\n                {/*<Education/>*/}\n                <span className=\"anchor\" id=\"skills\"/>\n                <h2>Skills & Languages</h2>\n                <Skills/>\n                <span className=\"anchor\" id=\"contact\"/>\n                <h2 title=\"Anytime, Anywhere\">Get In Touch</h2>\n                <ContactMe/>\n            </Container>\n        </Layout>\n    );\n};\n\nexport default IndexPage;\n\nexport const Head = () => {\n    return (\n        <>\n            <SEO title=\"Keshav Lingala\"/>\n            <html lang='en'/>\n        </>\n    )\n}\n"],"names":["Background","_styled","target","name","styles","Title","SubTitle","Profile","___EmotionJSX","SkillList","SkillItem","p","active","progress","Section","IconLister","skills","techs","IconNames","Angular","Typescript","React","Javascript","HTML","CSS","Bootstrap","Gatsby","PWA","Java","SpringBoot","Python","Kotlin","NodeJS","GoLang","GoGin","ApacheKafka","ApacheSpark","ApacheCassandra","NestJs","MySQL","MongoDB","GoogleCloud","Oracle","Postgresql","GraphQL","Redis","AWS","Azure","Docker","Kubernetes","ApacheHadoop","Bash","Jenkins","Git","Ansible","GithubActions","NeuralNetworks","TensorFlow","Keras","CPP","Arduino","Idea","GoLand","WebStorm","Pycharm","VsCode","Postman","Insomnia","BlazeMeter","Jmeter","Prometheus","Grafana","Kibana","ElasticSearch","Splunk","Jira","Discord","Slack","Confluence","BitBucket","Scrum","Kanban","Agile","WaterFall","map","skill","SkillsComponent","items","setItems","useState","icons","filter","icon","_skills$find","find","includes","tabIndex","onClick","length","s","key","ToolTipItem","tooltip","width","height","src","alt","Input","Row","TextArea","Button","Span","show","ContactMe","form","setForm","email","content","anonContent","valid","setValid","setShow","anonShow","setAnonShow","handleForm","change","k","updatedForm","value","match","submitForm","async","url","isAnon","data","anon_content","userData","fetchUserData","fetch","body","JSON","stringify","method","headers","then","d","ok","setTimeout","catch","_","json","e","id","onChange","c","placeholder","type","htmlFor","disabled","style","marginTop","title","rows","Description","IndexPage","console","log","Layout","Container","href","className","Projects","Skills","Head","SEO","lang"],"sourceRoot":""}